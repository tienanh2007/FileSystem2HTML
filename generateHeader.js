var fs = require('fs');

var order = ["harro", "About", "Contact", "Members", "Publications", "Research",
"Resources", "Teaching"];

module.exports  = {
  generateHeader: function() {
    let header = '<nav class = "nav navbar-inverse">\n'+
    '<div class="preHeader">\n'+
    '<a href="http://miamioh.edu/index.html" style="color: black"><img alt="Brand" style="width:15%;\n'+
    'height:15%;" src="resources/miamiLogo.png"></a>\n'+
    '</div>\n'+
    '<div class="headerLogo">\n'+
    '<a href="http://miamioh.edu/cas/academics/departments/physics/index.html" style="color: black"><img alt="Brand" style="max-width:100%;\n'+
    'max-height:100%;" src="resources/physics.png"></a>\n'+
    '</div>\n'+
    '<div class="container-fluid">\n'+
    '<div class="navbar-header">\n'+
    '</div>\n'+
    '<ul class="nav navbar-nav">\n'+
    '<li><a href="/home">Home</a></li>\n';
    order.forEach(function(folderName){
      var path = 'public/data/' + folderName;
      items = fs.readdirSync(path);
      if(items){
        console.log(items)
        subfolders = items.filter(function(file){
          return fs.lstatSync(path + '/' + file).isDirectory() && fs.existsSync(path + '/' + file + '/' + file + '.html');
        });
        if(subfolders.length != 0){
          console.log(subfolders)
          var dropdowns = '';
          subfolders.forEach(function(subfolder){
            recursiveDropdown(path + '/' + subfolder, subfolder, function(dd){
              dropdowns += dd;
            });
          });
          header += '<li class=dropdown><a id="' + folderName + '" href="' + folderName +'.html" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">'
          + folderName +'</a><ul class="dropdown-menu">'+ dropdowns +'</ul></li>\n';
        }
        else{
          header += '<li><a id="' + folderName + '" href="' + folderName + '.html">' + folderName +'</a></li>';
        }
      }
    });
    header += '</ul>\n' +
    '</div>\n' +
    '</nav>\n';
    fs.writeFile("public/autoGeneratedHeader.html", header);
  }
}
function recursiveDropdown(path, folderName, cb){
  subfolders = fs.readdirSync(path);
  subfolders = subfolders.filter(function(file){
    return fs.lstatSync(path + '/' + file).isDirectory() && fs.existsSync(path + '/' + file + '/' + file + '.html');
  });
  if(subfolders.length != 0){
    var dropdowns = '';
    dropdowns += '<li class="dropdown-submenu">' +
    '<a id="' + folderName + '" class="test" href="' + folderName + '.html">' + folderName + '<span class="caret"></span></a>' +
    '<ul class="dropdown-menu">'
    subfolders.forEach(function(subfolder){
      recursiveDropdown(path + '/' + subfolder, subfolder, function(dd){
        dropdowns += dd;
      });
    });
    dropdowns += '</ul></li>';
    cb(dropdowns);
  }
  else{
    var dropdowns = '<li><a id="' + folderName + '" href="' + folderName + '.html">' + folderName +'</a></li>';
    cb(dropdowns);
  }
}
module.exports.generateHeader();
